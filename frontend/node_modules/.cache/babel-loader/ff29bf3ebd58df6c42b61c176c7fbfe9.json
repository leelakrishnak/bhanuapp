{"ast":null,"code":"var _jsxFileName = \"/Users/leelakrishnak/bhanuapp/src/ListFiles.jsx\";\nimport React, { Component } from 'react';\nimport { getAllFiles } from './api';\nimport { List, message, Typography, Button } from 'antd';\nimport './listfiles.css';\nimport Filters from './Filters';\nimport ListFileItem from './ListFileItem';\nimport { angleDoubleUp } from 'react-icons-kit/fa/angleDoubleUp';\nimport { Icon } from 'react-icons-kit';\nconst {\n  Text\n} = Typography;\n\nclass ListFiles extends Component {\n  constructor(props) {\n    super(props);\n\n    this.goBack = () => {\n      let {\n        cwd\n      } = this.state;\n\n      if (cwd.charAt(cwd.length - 1) == '/') {\n        cwd;\n      }\n\n      if (cwd.lastIndexOf('/') !== -1) {\n        cwd = cwd.substr(0, cwd.lastIndexOf('/') + 1);\n        this.getData({\n          directory: cwd\n        });\n        this.setState({\n          cwd: cwd\n        });\n      }\n    };\n\n    this.folderClicked = path => {\n      this.setState({\n        cwd: path\n      });\n      this.getData({\n        directory: path\n      });\n    };\n\n    this.getData = args => {\n      this.setState({\n        loading: true\n      });\n      getAllFiles(args).then(response => {\n        console.log(response);\n        this.setState({\n          data: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n        message.error('Failed to fetch data');\n      }).finally(() => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.state = {\n      data: [],\n      loading: true,\n      homeDirectory: '/',\n      cwd: '/'\n    };\n  }\n\n  componentDidMount() {\n    const {\n      location: {\n        pathname\n      }\n    } = this.props;\n    this.getData({\n      directory: pathname\n    });\n  }\n\n  render() {\n    const {\n      loading,\n      data,\n      cwd\n    } = this.state;\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Filters, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, ({\n      files\n    }) => {\n      return /*#__PURE__*/React.createElement(List, {\n        size: \"small\",\n        header: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          shape: \"circle\",\n          onClick: this.goBack,\n          icon: /*#__PURE__*/React.createElement(Icon, {\n            icon: angleDoubleUp,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 31\n            }\n          }),\n          style: {\n            marginRight: '5px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 23\n          }\n        }), /*#__PURE__*/React.createElement(Text, {\n          type: \"secondary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 23\n          }\n        }, \"Current Directory: \", cwd)),\n        bordered: true,\n        loading: loading,\n        dataSource: files,\n        locale: {\n          emptyText: 'Directory is empty'\n        },\n        renderItem: item => /*#__PURE__*/React.createElement(ListFileItem, {\n          item: item,\n          folderClicked: this.folderClicked,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      });\n    })));\n  }\n\n}\n\nexport default ListFiles;","map":{"version":3,"sources":["/Users/leelakrishnak/bhanuapp/src/ListFiles.jsx"],"names":["React","Component","getAllFiles","List","message","Typography","Button","Filters","ListFileItem","angleDoubleUp","Icon","Text","ListFiles","constructor","props","goBack","cwd","state","charAt","length","lastIndexOf","substr","getData","directory","setState","folderClicked","path","args","loading","then","response","console","log","data","catch","error","finally","homeDirectory","componentDidMount","location","pathname","render","files","marginRight","emptyText","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { getAllFiles } from './api';\nimport { List, message, Typography, Button } from 'antd';\nimport './listfiles.css';\nimport Filters from './Filters';\nimport ListFileItem from './ListFileItem';\nimport { angleDoubleUp } from 'react-icons-kit/fa/angleDoubleUp';\nimport { Icon } from 'react-icons-kit';\n\nconst { Text } = Typography;\n\nclass ListFiles extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      loading: true,\n      homeDirectory: '/',\n      cwd: '/',\n    };\n  }\n\n  goBack = () => {\n    let { cwd } = this.state;\n\n    if (cwd.charAt(cwd.length - 1) == '/') {\n      cwd;\n    }\n\n    if (cwd.lastIndexOf('/') !== -1) {\n      cwd = cwd.substr(0, cwd.lastIndexOf('/') + 1);\n      this.getData({ directory: cwd });\n      this.setState({ cwd: cwd });\n    }\n  };\n\n  folderClicked = (path) => {\n    this.setState({ cwd: path });\n    this.getData({ directory: path });\n  };\n\n  componentDidMount() {\n    const {\n      location: { pathname },\n    } = this.props;\n\n    this.getData({ directory: pathname });\n  }\n\n  getData = (args) => {\n    this.setState({ loading: true });\n    getAllFiles(args)\n      .then((response) => {\n        console.log(response);\n        this.setState({ data: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error('Failed to fetch data');\n      })\n      .finally(() => {\n        this.setState({ loading: false });\n      });\n  };\n\n  render() {\n    const { loading, data, cwd } = this.state;\n    console.log(this.props);\n\n    return (\n      <>\n        <div className='list-container'>\n          <Filters data={data}>\n            {({ files }) => {\n              return (\n                <List\n                  size='small'\n                  header={\n                    <div>\n                      <Button\n                        shape='circle'\n                        onClick={this.goBack}\n                        icon={<Icon icon={angleDoubleUp} />}\n                        style={{ marginRight: '5px' }}\n                      />\n\n                      <Text type='secondary'>Current Directory: {cwd}</Text>\n                    </div>\n                  }\n                  bordered={true}\n                  loading={loading}\n                  dataSource={files}\n                  locale={{ emptyText: 'Directory is empty' }}\n                  renderItem={(item) => (\n                    <ListFileItem\n                      item={item}\n                      folderClicked={this.folderClicked}\n                    />\n                  )}\n                />\n              );\n            }}\n          </Filters>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ListFiles;\n"]},"metadata":{},"sourceType":"module"}