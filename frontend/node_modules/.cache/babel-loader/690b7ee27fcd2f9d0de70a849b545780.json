{"ast":null,"code":"var _jsxFileName = \"/Users/leelakrishnak/bhanuapp/src/Filters.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input, Select } from 'antd';\nimport './listfiles.css';\nconst {\n  Search\n} = Input;\nconst {\n  Option\n} = Select;\n\nclass Filters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filters: {}\n    };\n\n    this.handleChange = value => {\n      console.log(`selected ${value}`);\n      const {\n        filters\n      } = this.state;\n      filters.sortBy = value;\n      this.setState({\n        filters: filters\n      });\n    };\n\n    this.onSearch = value => {\n      console.log(value);\n      const {\n        filters\n      } = this.state;\n      filters.search = value.toLowerCase();\n      this.setState({\n        filters: filters\n      });\n    };\n\n    this.filterData = data => {\n      let {\n        filters = {}\n      } = this.state;\n\n      if (filters.search) {\n        data = data.filter(item => item.name.toLowerCase().includes(filters.search));\n      }\n\n      if (filters.sortBy) {\n        if (filters.sortBy === 'folders') {\n          data = data.sort((a, b) => {\n            return (b.isDir ? 1 : 0) - (a.isDir ? 1 : 0);\n          });\n        } else if (filters.sortBy === 'files') {\n          data = data.sort((a, b) => {\n            return (!b.isDir ? 1 : 0) - (!a.isDir ? 1 : 0);\n          });\n        } else if (filters.sortBy === 'atoz') {\n          data = data.sort((a, b) => {\n            if (a.name > b.name) {\n              return 1;\n            } else if (a.name < b.name) {\n              return -1;\n            } else return 0;\n          });\n        }\n      }\n\n      console.log(filters, data);\n      return data;\n    };\n  }\n\n  render() {\n    //const { data } = this.props;\n    const data = this.filterData(this.props.data);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      size: \"large\",\n      placeholder: \"Sort By\",\n      style: {\n        width: 200\n      },\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"files\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Files First\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"folders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"Folders First\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"atoz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"A to Z\")), /*#__PURE__*/React.createElement(Search, {\n      placeholder: \"Input File or Folder name\",\n      enterButton: \"Search\",\n      allowClear: true,\n      size: \"large\",\n      onSearch: this.onSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    })), this.props.children({\n      files: data\n    }));\n  }\n\n}\n\nFilters.propTypes = {\n  data: PropTypes.array\n};\nexport default Filters;","map":{"version":3,"sources":["/Users/leelakrishnak/bhanuapp/src/Filters.jsx"],"names":["React","Component","PropTypes","Input","Select","Search","Option","Filters","state","filters","handleChange","value","console","log","sortBy","setState","onSearch","search","toLowerCase","filterData","data","filter","item","name","includes","sort","a","b","isDir","render","props","width","children","files","propTypes","array"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input, Select } from 'antd';\nimport './listfiles.css';\nconst { Search } = Input;\nconst { Option } = Select;\n\nclass Filters extends Component {\n  state = {\n    filters: {},\n  };\n\n  handleChange = (value) => {\n    console.log(`selected ${value}`);\n    const { filters } = this.state;\n    filters.sortBy = value;\n    this.setState({ filters: filters });\n  };\n\n  onSearch = (value) => {\n    console.log(value);\n    const { filters } = this.state;\n    filters.search = value.toLowerCase();\n    this.setState({ filters: filters });\n  };\n\n  filterData = (data) => {\n    let { filters = {} } = this.state;\n    if (filters.search) {\n      data = data.filter((item) =>\n        item.name.toLowerCase().includes(filters.search)\n      );\n    }\n\n    if (filters.sortBy) {\n      if (filters.sortBy === 'folders') {\n        data = data.sort((a, b) => {\n          return (b.isDir ? 1 : 0) - (a.isDir ? 1 : 0);\n        });\n      } else if (filters.sortBy === 'files') {\n        data = data.sort((a, b) => {\n          return (!b.isDir ? 1 : 0) - (!a.isDir ? 1 : 0);\n        });\n      } else if (filters.sortBy === 'atoz') {\n        data = data.sort((a, b) => {\n          if (a.name > b.name) {\n            return 1;\n          } else if (a.name < b.name) {\n            return -1;\n          } else return 0;\n        });\n      }\n    }\n    console.log(filters, data);\n    return data;\n  };\n\n  render() {\n    //const { data } = this.props;\n    const data = this.filterData(this.props.data);\n    return (\n      <>\n        <div className='filter-container'>\n          <Select\n            size='large'\n            placeholder='Sort By'\n            style={{ width: 200 }}\n            onChange={this.handleChange}\n          >\n            <Option value='files'>Files First</Option>\n            <Option value='folders'>Folders First</Option>\n            <Option value='atoz'>A to Z</Option>\n          </Select>\n\n          <Search\n            placeholder='Input File or Folder name'\n            enterButton='Search'\n            allowClear\n            size='large'\n            onSearch={this.onSearch}\n          />\n        </div>\n        {this.props.children({\n          files: data,\n        })}\n      </>\n    );\n  }\n}\n\nFilters.propTypes = {\n  data: PropTypes.array,\n};\n\nexport default Filters;\n"]},"metadata":{},"sourceType":"module"}